<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Kamalesh" name="Test" tests="3" failures="0" timestamp="4 Dec 2016 12:39:45 GMT" time="3.785" errors="0">
  <testcase name="@BeforeMethod precondition" time="0.0" classname="scripts.InvalidLogin">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create new remote session. desired capabilities = Capabilities [{browserName=chrome}], required capabilities = Capabilities [{}]
Build info: version: &amp;apos;unknown&amp;apos;, revision: &amp;apos;1969d75&amp;apos;, time: &amp;apos;2016-10-18 09:43:45 -0700&amp;apos;
System info: host: &amp;apos;Kamalesh&amp;apos;, ip: &amp;apos;192.168.1.45&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;x86&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;1.8.0_111&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create new remote session. desired capabilities = Capabilities [{browserName=chrome}], required capabilities = Capabilities [{}]
Build info: version: 'unknown', revision: '1969d75', time: '2016-10-18 09:43:45 -0700'
System info: host: 'Kamalesh', ip: '192.168.1.45', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_111'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:91)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:141)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:155)
	at scripts.BaseTest.precondition(BaseTest.java:32)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod precondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="scripts.InvalidLogin">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="@BeforeMethod precondition" time="0.0" classname="scripts.VerifyProductVersion">
    <skipped/>
  </testcase> <!-- @BeforeMethod precondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="scripts.VerifyProductVersion">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="@BeforeMethod precondition" time="0.0" classname="scripts.ValidLoginLogout">
    <skipped/>
  </testcase> <!-- @BeforeMethod precondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="scripts.ValidLoginLogout">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="testInvalidLogin" time="0.015" classname="scripts.InvalidLogin">
    <skipped/>
  </testcase> <!-- testInvalidLogin -->
  <testcase name="testVerifyProductVersion" time="0.0" classname="scripts.VerifyProductVersion">
    <skipped/>
  </testcase> <!-- testVerifyProductVersion -->
  <testcase name="testValidLoginLogout" time="0.0" classname="scripts.ValidLoginLogout">
    <skipped/>
  </testcase> <!-- testValidLoginLogout -->
</testsuite> <!-- Test -->
